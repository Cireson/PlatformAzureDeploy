{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VMName": {
      "type": "string",
      "defaultValue": "ciresonplatform",
      "metadata": {
        "description": "This name will also be used to prefix the network security group, storage, virtual network, network card, subnet and public IP address name."
      }
    },

    "vnetName": {
      "type": "string",
      "defaultValue": "CiresonVNet",
      "metadata": {
        "description": "New Azure virtual network name."
      }
    },

    "vnetSubnetName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "New Azure subnet name."
      }
    },

    "adminUsername": {
      "type": "string",
      "defaultValue": "ciresonAdmin",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },

    "adminPassword": {
      "type": "securestring",
      "defaultValue": "CiresonP@ssw0rd1!",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },

    "location": {
      "type": "string",
      "defaultValue": "East US 2",
      "allowedValues": [
        "East US",
        "East US 2",
        "West US",
        "North Europe",
        "East Asia",
        "Southeast Asia"
      ],
      "metadata": {
        "description": "Resource Location"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "allowedValues": [
        "A5",
        "A6",
        "A7",
        "Basic_A0",
        "Basic_A1",
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "ExtraLarge",
        "ExtraSmall",
        "Large",
        "Medium",
        "Small",
        "Standard_D1",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4"
      ],
      "metadata": {
        "description": "VM Size"
      }
    },
    "dbName": {
      "type": "string",
      "defaultValue": "CiresonPlatform",
      "minLength": 2,
      "maxLength": 50
    },
    "dbCollation": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "dbEdition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "dbRequestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "platformVersion": {
      "type": "string",
      "defaultValue": "1.0.68-rc0011",
      "allowedValues": [
        "1.0.68-rc0011",
        "1.0.68-rc0010",
        "1.0.68-rc0009",
        "1.0.68-rc0008"
      ]
    },
    "platformRole": {
      "type": "string",
      "defaultValue": "Web",
      "allowedValues": [
        "Web",
        "Worker",
        "Both"
      ]
    }
  },
  "variables": {
    "windowsOSVersion": "2016-Technical-Preview-with-Containers",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "OSDiskName": "[concat(parameters('VMName'),'_osdisk')]",
    "nicName": "[concat(parameters('VMName'),'_nic')]",
    "subnetName": "parameters('existingSubnetName')",
    "networkSecurityGroupName": "[concat(parameters('VMName'),'_nsg')]",
    "newStorageAccountName": "[concat(uniqueString(resourceGroup().id),'winrmsa')]",
    "dnsNameForPublicIP": "[concat(parameters('VMName'), substring(uniqueString(resourceGroup().id), 0, 4))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressType": "Dynamic",
    "hostDNSNameScriptArgument": "[concat('*.',resourceGroup().location,'.cloudapp.azure.com')]",
    "vmStorageAccountContainerName": "vhds",
    "apiVersion": "2015-05-01-preview",
    "virtualNetworkName": "parameters('existingVnetName')",
    "ciresonplatformName": "[concat('ciresonplatform', uniqueString(resourceGroup().id))]",
    "sqlsvrName": "[toLower(concat(parameters('dbName'),'svr', uniqueString(resourceGroup().id)))]",
    "dbName": "[parameters('dbName')]",
    "connectionString": "[concat('Server=tcp:',variables('sqlsvrName'),'.database.windows.net,1433;Data Source=',variables('sqlsvrName'),'.database.windows.net;Initial Catalog=',variables('dbName'),';Persist Security Info=False;User ID=',parameters('adminUsername'),';Password=',parameters('adminPassword'),';Pooling=False;MultipleActiveResultSets=False;Encrypt=True;Connection Timeout=30;')]",
    "linkedTemplateBaseUrl": "https://raw.githubusercontent.com/Cireson/PlatformAzureDeploy/master/src/SwarmNode/Templates/",
    "vnetName": "[parameters('vnetName')]",
    "vnetPrefix": "10.0.0.0/16",
    "vnetSubnet1Name": "[parameters('vnetSubnetName')]",
    "vnetSubnet1Prefix": "10.0.0.0/24",
    "NicVnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "NicSubnetRef": "[concat(variables('NicVnetID'), '/subnets/', variables('vnetSubnet1Name'))]"

  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },

          {
            "name": "RDP",
            "properties": {
              "description": "RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "WinRM",
            "properties": {
              "description": "WinRM",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5986",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 400,
              "direction": "Inbound"
            }
          },
          {
            "name": "http",
            "properties": {
              "description": "http",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newStorageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('dnsNameForPublicIP')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[tolower(variables('dnsNameForPublicIP'))]"
        }
      }
    },

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "PlatformConfiguration",
          "type": "extensions",
          "location": "[parameters('location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
            "[concat('Microsoft.Sql/servers', '/', variables('sqlsvrName'))]"
          ],
          "tags": {
            "displayName": "PlatformConfiguration"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "https://raw.githubusercontent.com/Cireson/PlatformAzureDeploy/master/src/SwarmNode/DeploymentArtifacts/vmConfig.ps1",
                "https://raw.githubusercontent.com/Cireson/PlatformAzureDeploy/master/src/SwarmNode/DeploymentArtifacts/ConfigureWinRM.ps1",
                "https://raw.githubusercontent.com/Cireson/PlatformAzureDeploy/master/src/SwarmNode/DeploymentArtifacts/makecert.exe",
                "https://raw.githubusercontent.com/Cireson/PlatformAzureDeploy/master/src/SwarmNode/DeploymentArtifacts/winrmconf.cmd",
                "https://raw.githubusercontent.com/Cireson/PlatformAzureDeploy/master/src/SwarmNode/DeploymentArtifacts/FixTP5NtwkBug.ps1",
                "https://raw.githubusercontent.com/Cireson/PlatformAzureDeploy/master/src/SwarmNode/DeploymentArtifacts/PlatformDownload.ps1",
                "https://raw.githubusercontent.com/Cireson/PlatformAzureDeploy/master/src/SwarmNode/DeploymentArtifacts/AddAccountToLogonAsService.ps1"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file vmConfig.ps1 ', ' -HostName ', variables('hostDNSNameScriptArgument'), ' -sqlServer ', variables('sqlsvrName'), ' -dbName ', variables('dbName'), ' -sqlUserName ', parameters('adminUsername'), ' -sqlPassword ', parameters('adminPassword'), ' -platformVersion ', parameters('platformVersion'), ' -platformRole', parameters('platformRole'))]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('sqlsvrName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [ ],
      "tags": {
        "displayName": "sqlsvr"
      },
      "properties": {
        "version": "12.0",
        "administratorLogin": "[parameters('adminUsername')]",
        "administratorLoginPassword": "[parameters('adminPassword')]"
      },
      "resources": [
        {
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqlsvrName'))]"
          ],
          "properties": {
            "startIpAddress": "1.0.0.0",
            "endIpAddress": "254.254.254.254"
          }
        },
        {
          "name": "[variables('dbName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers', '/', variables('sqlsvrName'))]"
          ],
          "tags": {
            "displayName": "db"
          },
          "properties": {
            "collation": "[parameters('dbCollation')]",
            "edition": "[parameters('dbEdition')]",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "[parameters('dbRequestedServiceObjectiveName')]"
          }
        }
      ]
    },
    {
      "name": "[variables('vnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "tags": {
        "displayName": "vnet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnetSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('vnetSubnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('nicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/',variables('dnsNameForPublicIP'))]"
      ],
      "tags": {
        "displayName": "Nic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('NicSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('dnsNameForPublicIP'))]"
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "platformUrl": {
      "type": "string",
      "value": "[concat('http://',reference(variables('dnsNameForPublicIP')).dnsSettings.fqdn, '/api/')]"
    },
    "ConnectionString": {
      "type": "string",
      "value": "[variables('connectionString')]"
    }
  }
}
