{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "VMName": {
      "type": "string",
      "defaultValue": "winswarm1",
      "metadata": {
        "description": "This name will also be used to prefix the network security group, storage, virtual network, network card, subnet and public IP address name."
      }
    },

    "existingVnetResourceGroup": {
      "type": "string",
      "defaultValue": "CiresonSwarm",
      "metadata": {
        "description": "Existing Azure Resource Group."
      }
    },

    "existingVnetName": {
      "type": "string",
      "defaultValue": "CiresonSwarm",
      "metadata": {
        "description": "Existing Azure virtual network."
      }
    },

    "existingSubnetName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Existing Azure subnet."
      }
    },

    "adminUsername": {
      "type": "string",
      "defaultValue": "pzerger",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },

    "adminPassword": {
      "type": "securestring",
      "defaultValue": "CiresonP@ssw0rd1!",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },

    "dnsNameForPublicIP": {
      "type": "string",
      "defaultValue": "winswarm1",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },

    "location": {
      "type": "string",
      "defaultValue": "East US 2",
      "allowedValues": [
        "East US",
        "East US 2",
        "West US",
        "North Europe",
        "East Asia",
        "Southeast Asia"
      ],
      "metadata": {
        "description": "Resource Location"
      }
    },

    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "VM Size"
      }
    },
    "sqlsvrAdminLogin": {
      "type": "string",
      "defaultValue": "sqladmin",
      "minLength": 1
    },
    "sqlsvrAdminLoginPassword": {
      "type": "securestring",
      "defaultValue": "P@ssw0rd1!"
    },
    "environmentPrefix": {
      "type": "string",
      "defaultValue": "",
      "minLength": 2,
      "maxLength": 6
    },
    "dbCollation": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "dbEdition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "dbRequestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "platformVersion": {
      "type": "string",
      "defaultValue": "1.0.68-rc0008"
    }
  },

  "variables": {
    "windowsOSVersion": "2016-Technical-Preview-with-Containers",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "OSDiskName": "[concat(parameters('VMName'),'_osdisk')]",
    "nicName": "[concat(parameters('VMName'),'_nic')]",
    "subnetName": "parameters('existingSubnetName')",
    "networkSecurityGroupName": "[concat(parameters('VMName'),'_nsg')]",
    "newStorageAccountName": "[concat(uniqueString(resourceGroup().id),'winrmsa')]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressType": "Dynamic",
    "hostDNSNameScriptArgument": "[concat('*.',resourceGroup().location,'.cloudapp.azure.com')]",
    "vmStorageAccountContainerName": "vhds",
    "apiVersion": "2015-05-01-preview",
    "virtualNetworkName": "parameters('existingVnetName')",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('existingVNetName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('existingSubnetName'))]",
    "ciresonplatformName": "[concat('ciresonplatform', uniqueString(resourceGroup().id))]",
    "sqlsvrName": "[concat('sqlsvr', uniqueString(resourceGroup().id))]",
    "dbName": "[concat(parameters('environmentPrefix'), 'sqlsvr')]"
  },
  "resources": [

    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },

          {
            "name": "RDP",
            "properties": {
              "description": "RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },

          {
            "name": "Docker",
            "properties": {
              "description": "Docker",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "2375",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          },
          {
            "name": "WinRM",
            "properties": {
              "description": "WinRM",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5986",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 400,
              "direction": "Inbound"
            }
          },
          {
            "name": "http",
            "properties": {
              "description": "http",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "Swarm-master",
            "properties": {
              "description": "Swarm-master",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "2376",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 600,
              "direction": "Inbound"
            }
          },
          {
            "name": "Docker-registry",
            "properties": {
              "description": "Docker-registry",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5000",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 700,
              "direction": "Inbound"
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newStorageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('dnsNameForPublicIP')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[tolower(parameters('dnsNameForPublicIP'))]"
        }
      }
    },

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',parameters('dnsNameForPublicIP'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/', parameters('existingVNetResourceGroup'), '/providers/Microsoft.Network/virtualNetworks/', parameters('existingVNetName'), '/subnets/', parameters('existingSubnetName'))]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('dnsNameForPublicIP'))]"
              }
            }
          }
        ]
      }
    },

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "containerConfiguration",
          "type": "extensions",
          "location": "[parameters('location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
            "[concat('Microsoft.Sql/servers', '/', variables('sqlsvrName'))]"
          ],
          "tags": {
            "displayName": "containerConfiguration"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "http://cireson.blob.core.windows.net/demo/containerConfigv2.ps1",
                "http://cireson.blob.core.windows.net/demo/ConfigureWinRM.ps1",
                "http://cireson.blob.core.windows.net/demo/makecert.exe",
                "http://cireson.blob.core.windows.net/demo/winrmconf.cmd",
                "http://cireson.blob.core.windows.net/demo/daemonjson.ps1",
                "http://cireson.blob.core.windows.net/demo/FixTP5NtwkBug.ps1",
                "http://cireson.blob.core.windows.net/demo/PlatformDownload.ps1"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file containerConfigv2.ps1 ', ' -HostName ', variables('hostDNSNameScriptArgument'), ' -sqlServer ', variables('sqlsvrName'), ' -dbName ', variables('dbName'), ' -sqlUserName ', parameters('sqlsvrAdminLogin'), ' -sqlPassword ', parameters('sqlsvrAdminLoginPassword'), ' -platformVersion ', parameters('platformVersion'))]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('sqlsvrName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [ ],
      "tags": {
        "displayName": "sqlsvr"
      },
      "properties": {
        "version": "12.0",
        "administratorLogin": "[parameters('sqlsvrAdminLogin')]",
        "administratorLoginPassword": "[parameters('sqlsvrAdminLoginPassword')]"
      },
      "resources": [
        {
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqlsvrName'))]"
          ],
          "properties": {
            "startIpAddress": "1.0.0.0",
            "endIpAddress": "254.254.254.254"
          }
        },
        {
          "name": "[variables('dbName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers', '/', variables('sqlsvrName'))]"
          ],
          "tags": {
            "displayName": "db"
          },
          "properties": {
            "collation": "[parameters('dbCollation')]",
            "edition": "[parameters('dbEdition')]",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "[parameters('dbRequestedServiceObjectiveName')]"
          }
        }
      ]
    }
  ],
  "outputs": {
    "ConnectionString": {
      "type": "string",
      "value": "[concat('Server=tcp:',variables('sqlsvrName'),'.database.windows.net,1433;Data Source=',variables('sqlsvrName'),'.database.windows.net;Initial Catalog=',variables('dbName'),';Persist Security Info=False;User ID=',parameters('sqlsvrAdminLogin'),';Password=',parameters('sqlsvrAdminLoginPassword'),';Pooling=False;MultipleActiveResultSets=False;Encrypt=True;Connection Timeout=30;')]"
    }
  }
}